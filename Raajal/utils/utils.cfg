#textdomain wesnoth

#define SET_DAY DAY_NUMBER
    [event]
        name=prestart
        {VARIABLE day_number ({DAY_NUMBER})}
    [/event]
#enddef

#define PARTIAL_HEAL FILTER HP
    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        kill=no
        variable=PARTIAL_HEAL_store
    [/store_unit]

    {FOREACH PARTIAL_HEAL_store PARTIAL_HEAL_i}
    [object]
        silent=yes
    
        [filter]
            x,y=$PARTIAL_HEAL_store[$PARTIAL_HEAL_i].x,$PARTIAL_HEAL_store[$PARTIAL_HEAL_i].y
        [/filter]
    
        [effect]
            apply_to=hitpoints
            increase={HP}
        [/effect]
    [/object]
    {NEXT PARTIAL_HEAL_i}

    {CLEAR_VARIABLE PARTIAL_HEAL_store}
#enddef

#define FACE_X FILTER X
    {STORE_UNITS store ({FILTER}) no}
    {VARIABLE store[0].facing se}
    [if]
        [variable]
            name=store.x
            greater_than={X}
        [/variable]
        [then]
            {VARIABLE store.facing sw}
        [/then]
    [/if]

    [unstore_unit]
        variable=store
        find_vacant=no
    [/unstore_unit]

    {CLEAR_VARIABLE store}
#enddef

#define FACE_EACH_OTHER FILTER1 FILTER2
    {STORE_UNITS store1 ({FILTER1}) no}
    {STORE_UNITS store2 ({FILTER2}) no}

    {VARIABLE store1[0].facing se}
    {VARIABLE store2[0].facing sw}

    [if]
        [variable]
            name=store1[0].x
            greater_than=$store2[0].x
        [/variable]
        [then]
            {VARIABLE store1[0].facing sw}
            {VARIABLE store2[0].facing se}
        [/then]
    [/if]

    [unstore_unit]
        variable=store1[0]
        find_vacant=no
    [/unstore_unit]
    [unstore_unit]
        variable=store2[0]
        find_vacant=no
    [/unstore_unit]

    {CLEAR_VARIABLE store1}
    {CLEAR_VARIABLE store2}
#enddef

#define UNIT_MSG FILTER MSG
    [scroll_to_unit]
        {FILTER}
    [/scroll_to_unit]
    [message]
        {FILTER}
        message={MSG}
    [/message]
#enddef

#define MORNING_NO_SOUND
    [time]
        id=morning_no_sound
        name= _ "Morning"
        image=misc/schedule-morning.png
        lawful_bonus=25
        darker=dawn
    [/time]
#enddef

#define FULL_DAY

    {SECOND_WATCH}  #01:00
    {SECOND_WATCH}
    {SECOND_WATCH}
    {SECOND_WATCH}
    {DAWN}          #05:00
    {MORNING}       #06:00
    {MORNING_NO_SOUND}
    {MORNING_NO_SOUND}
    {MORNING_NO_SOUND}
    {MORNING_NO_SOUND}
    {MORNING_NO_SOUND}
    {AFTERNOON}     #12:00
    {AFTERNOON}
    {AFTERNOON}
    {AFTERNOON}
    {AFTERNOON}
    {AFTERNOON}
    {AFTERNOON}
    {AFTERNOON}
    {AFTERNOON}
    {DUSK}          #21:00
    {FIRST_WATCH}   #22:00
    {SECOND_WATCH}    #23:00
    {SECOND_WATCH}    #24:00
#enddef

#define UNIT_NAMELESS TYPE SIDE X Y
    [unit]
        description={TYPE}
        type={TYPE}
        x={X}
        y={Y}
        side={SIDE}
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define UNIT_CREATE TYPE DESC UDESC SIDE X Y MORE_WML
    [unit]
        description={DESC}
        user_description={UDESC}
        type={TYPE}
        x={X}
        y={Y}
        side={SIDE}
        {MORE_WML}
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define UNIT_LOYAL TYPE DESC UDESC SIDE X Y
    [unit]
        description={DESC}
        user_description={UDESC}
        type={TYPE}
        x={X}
        y={Y}
        side={SIDE}
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define UNIT_LEADER TYPE DESC UDESC SIDE X Y
    [unit]
        type={TYPE}
        description={DESC}
        user_description={UDESC}
        side={SIDE}
        x={X}
        y={Y}
        canrecruit=yes
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define STORE_UNITS STORE FILTER KILL
    [store_unit]
        variable={STORE}
        kill={KILL}
        [filter]
            {FILTER}
        [/filter]
    [/store_unit]
#enddef

#define BEGIN_MODIFY STORE
    {FOREACH ({STORE}) MODIFY_UNIT_i}
#enddef

#define GET_STORED_VALUE STORE VAR VALUE_VAR
    {VARIABLE_OP ({VALUE_VAR}) to_variable ({STORE}[$$MODIFY_UNIT_i|].{VAR})}
#enddef

#define MODIFY_UNIT_VARIABLE STORE VAR VALUE
    {VARIABLE_OP VAR format ({STORE}[$MODIFY_UNIT_i|].{VAR})}
    [set_variable]
        name=$VAR
        format={VALUE}
    [/set_variable]
#enddef

#define END_MODIFY STORE FIND_VACANT
    {VARIABLE_OP VAR format ({STORE}[$MODIFY_UNIT_i|])}
    [unstore_unit]
        variable=$VAR
        find_vacant={FIND_VACANT}
    [/unstore_unit]
    {NEXT MODIFY_UNIT_i}

    {CLEAR_VARIABLE VAR}
#enddef

#define MISSION_UNSTORE STORE
    {BEGIN_MODIFY ({STORE})}
    {GET_STORED_VALUE ({STORE}) max_moves max_moves}
    {MODIFY_UNIT_VARIABLE ({STORE}) moves $max_moves}
    {GET_STORED_VALUE ({STORE}) max_attacks max_attacks}
    {MODIFY_UNIT_VARIABLE ({STORE}) attacks_left $max_attacks}
    {END_MODIFY ({STORE}) yes}

    {CLEAR_VARIABLE ({STORE})}
    {CLEAR_VARIABLE max_moves}
    {CLEAR_VARIABLE max_attacks}
#enddef

#define UNSTORE_AT STORE SIDE X Y
    [store_locations]
        variable=locs
        x={X}
        y={Y}
    [/store_locations]
    {VARIABLE j 0}

    {BEGIN_MODIFY ({STORE})}
    {MODIFY_UNIT_VARIABLE ({STORE}) side ({SIDE})}
    {MODIFY_UNIT_VARIABLE ({STORE}) x $locs[$j].x}
    {MODIFY_UNIT_VARIABLE ({STORE}) y $locs[$j].y}
    {GET_STORED_VALUE ({STORE}) max_moves max_moves}
    {MODIFY_UNIT_VARIABLE ({STORE}) moves $max_moves}
    {GET_STORED_VALUE ({STORE}) max_attacks max_attacks}
    {MODIFY_UNIT_VARIABLE ({STORE}) attacks_left $max_attacks}
    #Increment location index
    {VARIABLE_OP j add 1}
    [if]
        [variable]
            name=j
            less_than=$locs.length
        [/variable]
        [else]
            {VARIABLE j 0}
        [/else]
    [/if]
    {END_MODIFY ({STORE}) yes}

    {CLEAR_VARIABLE locs}
    {CLEAR_VARIABLE ({STORE})}
    {CLEAR_VARIABLE max_attacks}
    {CLEAR_VARIABLE max_moves}
    {CLEAR_VARIABLE j}
#enddef

#define UNIT_COUNT FILTER VAR
    {STORE_UNITS STORE ({FILTER}) no}
    {VARIABLE ({VAR}) $STORE.length}
    {CLEAR_VARIABLE STORE}
#enddef

#define MODIFY_UNIT_GOTO FILTER GOTO_X GOTO_Y
    {STORE_UNITS STORE ({FILTER}) no}

    {FOREACH STORE I}
    {VARIABLE STORE[$I].goto_x ({GOTO_X})}
    {VARIABLE STORE[$I].goto_y ({GOTO_Y})}
    [unstore_unit]
        variable=STORE[$I]
    [/unstore_unit]
    {NEXT I}

    {CLEAR_VARIABLE STORE}
    {CLEAR_VARIABLE I}
#enddef
