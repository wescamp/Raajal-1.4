#textdomain wesnoth-Raajal

#define SOUL_TO_CASTLE_LOCS KILLER_FILTER SOUL_FILTER CASTLE_FILTER DEFAULT_X DEFAULT_Y NEW_SIDE
    [event]
        name=die
        first_time_only=no
        [filter]
            type=Lost Soul
            {SOUL_FILTER}
        [/filter]
        [filter_second]
            {KILLER_FILTER}
        [/filter_second]
        [store_unit]
            variable=store
            kill=yes
            [filter]
                x=$x1
                y=$y1
            [/filter]
        [/store_unit]
        [store_locations]
            variable=locs
            {CASTLE_FILTER}
        [/store_locations]
        [if]
            [variable]
                name=locs.length
                greater_than=0
            [/variable]
            [then]
                #Move the soul to the rightmost location
                {VARIABLE n $locs.length}
                {VARIABLE_OP n add -1}
                {VARIABLE_OP store.x to_variable locs[$n].x}
                {VARIABLE_OP store.y to_variable locs[$n].y}
                {CLEAR_VARIABLE n}
            [/then]
            [else]
                {VARIABLE store.x ({DEFAULT_X})}
                {VARIABLE store.y ({DEFAULT_Y})}
            [/else]
        [/if]

        {VARIABLE store.side ({NEW_SIDE})}
        {VARIABLE store.hitpoints $store.max_hitpoints}
        {VARIABLE_OP movex format ($x1|,$store.x)}
        {VARIABLE_OP movey format ($y1|,$store.y)}
        [move_unit_fake]
            type=Lost Soul
            x=$movex
            y=$movey
            side={NEW_SIDE}
        [/move_unit_fake]
        [unstore_unit]
            variable=store
            find_vacant=yes
        [/unstore_unit]
        {CLEAR_VARIABLE store}
        {CLEAR_VARIABLE locs}
        {CLEAR_VARIABLE movex}
        {CLEAR_VARIABLE movey}
    [/event]
#enddef

#define SOUL_TO_CASTLE KILLER_FILTER SOUL_FILTER CASTLE_X CASTLE_Y NEW_SIDE
    [event]
        name=die
        first_time_only=no
        [filter]
            type=Lost Soul
            {SOUL_FILTER}
        [/filter]
        [filter_second]
            {KILLER_FILTER}
        [/filter_second]
        
        {SET_SOUL_DEFENSE 30 $x1 $y1}
        
        [store_unit]
            variable=store
            kill=yes
            [filter]
                x=$x1
                y=$y1
            [/filter]
        [/store_unit]
                
        {VARIABLE store.side ({NEW_SIDE})}
        {VARIABLE store.hitpoints $store.max_hitpoints}
        {VARIABLE store.x ({CASTLE_X})}
        {VARIABLE store.y ({CASTLE_Y})}
        {VARIABLE_OP movex format ($x1|,{CASTLE_X})}
        {VARIABLE_OP movey format ($y1|,{CASTLE_Y})}
        [move_unit_fake]
            type=Lost Soul
            x=$movex
            y=$movey
            side={NEW_SIDE}
        [/move_unit_fake]
        [unstore_unit]
            variable=store
            find_vacant=yes
        [/unstore_unit]
        {CLEAR_VARIABLE store}
        {CLEAR_VARIABLE movex}
        {CLEAR_VARIABLE movey}
    [/event]
#enddef

#define CONVERT_TO_SOUL MASTER_FILTER MASTER_POWER_TYPE SIDE X Y SOUL_VARIATION

    #Store Master
    [store_unit]
        variable=MASTER_STORE
        kill=no
        [filter]
            {MASTER_FILTER}
        [/filter]
    [/store_unit]

    #Show master's power
    {MODIFY_UNIT ({MASTER_FILTER}) type ({MASTER_POWER_TYPE})}
    {MODIFY_UNIT ({MASTER_FILTER}) hitpoints $MASTER_STORE.hitpoints}
    {MODIFY_UNIT ({MASTER_FILTER}) max_hitpoints $MASTER_STORE.max_hitpoints}

    #He faces the unit
    [if]
        [variable]
            name=MASTER_STORE.x
            greater_than={X}
        [/variable]
        [then]
            {MODIFY_UNIT ({MASTER_FILTER}) facing sw}
        [/then]
        [else]
            {MODIFY_UNIT ({MASTER_FILTER}) facing se}
        [/else]
    [/if]

    [scroll_to_unit]
        {MASTER_FILTER}
    [/scroll_to_unit]
    [redraw] [/redraw]
    [delay]
        time=1000
    [/delay]

    #Store unit to be converted into a soul
    [store_unit]
        variable=STORE_SOUL
        kill=no
        [filter]
            x={X}
            y={Y}
        [/filter]
    [/store_unit]

    #Scroll to unit to be converted
    [scroll_to_unit]
        x={X}
        y={Y}
    [/scroll_to_unit]

    #Show soul conversion
    [kill]
        x={X}
        y={Y}
    [/kill]
    {PLACE_IMAGE souls/moving.png ({X}) ({Y})}
    [sound]
        name=soul-hit.ogg
    [/sound]
    [redraw] [/redraw]
    [delay]
        time=500
    [/delay]
    [removeitem]
        x={X}
        y={Y}
    [/removeitem]
    [redraw] [/redraw]
    #Create soul
    [unit]
        description=$STORE_SOUL.description
        user_description=$STORE_SOUL.user_description
        type=Lost Soul
        side={SIDE}
        x={X}
        y={Y}
        variation={SOUL_VARIATION}
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
    {MODIFY_UNIT (
    x={X}
    y={Y}) attacks_left 0}
    {MODIFY_UNIT (
    x={X}
    y={Y}) moves 0}

    [redraw] [/redraw]
    [delay]
        time=1000
    [/delay]

    #Give master more hitpoints
    {STORE_UNIT_VAR (
    x={X}
    y={Y}) hitpoints HITPOINTS}
    {VARIABLE_OP MASTER_STORE.max_hitpoints add $HITPOINTS}
    {VARIABLE_OP MASTER_STORE.hitpoints add $HITPOINTS}

    [unstore_unit]
        variable=MASTER_STORE
        find_vacant=no
    [/unstore_unit]

    {CLEAR_VARIABLE STORE_SOUL}
    {CLEAR_VARIABLE MASTER_STORE}
    {CLEAR_VARIABLE HITPOINTS}
#enddef

#define SET_SOUL_DEFENSE DEFENSE X Y
    [store_unit]
        variable=SET_SOUL_DEFENSE_store
        kill=no
        [filter]
            x={X}
            y={Y}
        [/filter]
    [/store_unit]
    
    {VARIABLE SET_SOUL_DEFENSE_store.defense.deep_water ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.shallow_water ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.swamp_water ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.grassland ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.sand ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.forest ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.hills ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.mountains ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.village ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.castle ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.cave ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.tundra ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.canyon ({DEFENSE})}
    {VARIABLE SET_SOUL_DEFENSE_store.defense.cavewall ({DEFENSE})}
    
    [unstore_unit]
        variable=SET_SOUL_DEFENSE_store
        find_vacant=no
    [/unstore_unit]
    
    {CLEAR_VARIABLE SET_SOUL_DEFENSE_store}
#enddef

#define INCREMENT_SOUL_DEFENSE INC X Y
    {STORE_UNIT_VAR (
    x={X}
    y={Y}) defense.grassland defense}
    
    {VARIABLE_OP defense add ({INC})}
    
    #If 30 <= defense <= 100
    [if]
        [variable]
            name=defense
            less_than=101
        [/variable]
        [variable]
            name=defense
            greater_than=29
        [/variable]
        [then]
            {SET_SOUL_DEFENSE $defense ({X}) ({Y})}
        [/then]
    [/if]
    
    {CLEAR_VARIABLE defense}
#enddef

#define SOUL_ADJUST_DEFENSE
    #Soul defense gets weaker when it misses
    [event]
        name=attacker_misses
        first_time_only=no
        [filter]
            type=Lost Soul
        [/filter]
        {INCREMENT_SOUL_DEFENSE 10 $x1 $y1}
    [/event]
    [event]
        name=defender_misses
        first_time_only=no
        [filter_second]
            type=Lost Soul
        [/filter_second]
        {INCREMENT_SOUL_DEFENSE 10 $x2 $y2}
    [/event]
    
    #Soul defense gets stronger when it hits
    [event]
        name=attacker_hits
        first_time_only=no
        [filter]
            type=Lost Soul
        [/filter]
        {INCREMENT_SOUL_DEFENSE -5 $x1 $y1}
    [/event]
    [event]
        name=defender_hits
        first_time_only=no
        [filter_second]
            type=Lost Soul
        [/filter_second]
        {INCREMENT_SOUL_DEFENSE -5 $x2 $y2}
    [/event]
#enddef